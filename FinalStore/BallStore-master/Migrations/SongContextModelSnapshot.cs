// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SongStore.Models.DataAccess;

#nullable disable

namespace MusicStore.Migrations
{
    [DbContext(typeof(SongContext))]
    partial class SongContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SongStore.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryDescription = "",
                            CategoryName = "Pop"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryDescription = "",
                            CategoryName = "Country"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryDescription = "",
                            CategoryName = "Hiphop"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryDescription = "",
                            CategoryName = "Electronic"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryDescription = "",
                            CategoryName = "Rock"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryDescription = "",
                            CategoryName = "Indie"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryDescription = "",
                            CategoryName = "R&B"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryDescription = "",
                            CategoryName = "Jazz"
                        },
                        new
                        {
                            CategoryId = 9,
                            CategoryDescription = "",
                            CategoryName = "Ambient"
                        },
                        new
                        {
                            CategoryId = 10,
                            CategoryDescription = "",
                            CategoryName = "Reggae"
                        });
                });

            modelBuilder.Entity("SongStore.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("OrderPlaced")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SongStore.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SongId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("SongStore.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("ShoppingCartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingCartItemId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ShoppingCartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SongId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingCartItemId");

                    b.HasIndex("SongId");

                    b.ToTable("ShoppingCartItems");
                });

            modelBuilder.Entity("SongStore.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SongId"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsSongInStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSongOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("SongImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SongPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SongId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            SongId = 1,
                            Artist = "Olivia Rodrigo",
                            CategoryId = 1,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01VampireTN.jpg",
                            SongImageUrl = "/images/01Vampire.jpg",
                            SongName = "Vampire",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 2,
                            Artist = "Troye Sivan",
                            CategoryId = 1,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01One-Of-Your-GirlsTN.jpg",
                            SongImageUrl = "/images/01One-Of-Your-Girls.jpg",
                            SongName = "One Of Your Girls",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 3,
                            Artist = "Miley Cyrus",
                            CategoryId = 1,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01FlowersTN.jpg",
                            SongImageUrl = "/images/01Flowers.jpg",
                            SongName = "Flowers",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 4,
                            Artist = "Laufey",
                            CategoryId = 1,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01From-The-StartTN.jpg",
                            SongImageUrl = "/images/01From-The-Start.jpg",
                            SongName = "From The Start",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 5,
                            Artist = "Taylor Swift",
                            CategoryId = 1,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Is-It-Over-NowTN.jpg",
                            SongImageUrl = "/images/01Is-It-Over-Now.jpg",
                            SongName = "Is It Over Now",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 6,
                            Artist = "Lainey Wilson",
                            CategoryId = 2,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Watermelon-MoonshineTN.jpg",
                            SongImageUrl = "/images/01Watermelon-Moonshine.jpg",
                            SongName = "Watermelon Moonshine",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 7,
                            Artist = "Morgan Wallen",
                            CategoryId = 2,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Last-NightTN.jpg",
                            SongImageUrl = "/images/01Last-Night.jpg",
                            SongName = "Last Night",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 8,
                            Artist = "Luke Combs",
                            CategoryId = 2,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Fast-CarTN.jpg",
                            SongImageUrl = "/images/01Fast-Car.jpg",
                            SongName = "Fast Car",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 9,
                            Artist = "Jordan Davis",
                            CategoryId = 2,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Next-Thing-You-KnowTN.jpg",
                            SongImageUrl = "/images/01Next-Thing-You-Know.jpg",
                            SongName = "Next Thing You Know",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 10,
                            Artist = "Chris Stapleton",
                            CategoryId = 2,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01White-HorseTN.jpg",
                            SongImageUrl = "/images/01White-Horse.jpg",
                            SongName = "White Horse",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 11,
                            Artist = "Lil Durk",
                            CategoryId = 3,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01All-My-LifeTN.jpg",
                            SongImageUrl = "/images/01All-My-Life.jpg",
                            SongName = "All My Life",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 12,
                            Artist = "Doja Cat",
                            CategoryId = 3,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Paint-The-Town-RedTN.jpg",
                            SongImageUrl = "/images/01Paint-The-Town-Red.jpg",
                            SongName = "Paint The Town Red",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 13,
                            Artist = "Dave",
                            CategoryId = 3,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01SprinterTN.jpg",
                            SongImageUrl = "/images/01Sprinter.jpg",
                            SongName = "Sprinter",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 14,
                            Artist = "Drake",
                            CategoryId = 3,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01First-Person-ShooterTN.jpg",
                            SongImageUrl = "/images/01First-Person-Shooter.jpg",
                            SongName = "First Person Shooter",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 15,
                            Artist = "Ice Spice",
                            CategoryId = 3,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Princess-DianaTN.jpg",
                            SongImageUrl = "/images/01Princess-Diana.jpg",
                            SongName = "Princess Diana",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 16,
                            Artist = "Anyma",
                            CategoryId = 4,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01EternityTN.jpg",
                            SongImageUrl = "/images/01Eternity.jpg",
                            SongName = "Eternity",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 17,
                            Artist = "Overmono",
                            CategoryId = 4,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Good-LiesTN.jpg",
                            SongImageUrl = "/images/01Good-Lies.jpg",
                            SongName = "Good Lies",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 18,
                            Artist = "Romy",
                            CategoryId = 4,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01StrongTN.jpg",
                            SongImageUrl = "/images/01Strong.jpg",
                            SongName = "Strong",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 19,
                            Artist = "Jungle",
                            CategoryId = 4,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Back-On-74TN.jpg",
                            SongImageUrl = "/images/01Back-On-74.jpg",
                            SongName = "Back On 74",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 20,
                            Artist = "Caroline Polacheck",
                            CategoryId = 4,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Welcome-To-My-IslandTN.jpg",
                            SongImageUrl = "/images/01Welcome-To-My-Island.jpg",
                            SongName = "Welcome To My Island",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 21,
                            Artist = "Foo Fighters",
                            CategoryId = 5,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01RescuedTN.jpg",
                            SongImageUrl = "/images/01Rescued.jpg",
                            SongName = "Rescued",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 22,
                            Artist = "Paramore",
                            CategoryId = 5,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Running-Out-of-TimeTN.jpg",
                            SongImageUrl = "/images/01Running-Out-of-Time.jpg",
                            SongName = "Running Out of Time",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 23,
                            Artist = "Blink-182",
                            CategoryId = 5,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01One-More-TimeTN.jpg",
                            SongImageUrl = "/images/01One-More-Time.jpg",
                            SongName = "One More Time",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 24,
                            Artist = "Bring Me The Horizon",
                            CategoryId = 5,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01LosTTN.jpg",
                            SongImageUrl = "/images/01LosT.jpg",
                            SongName = "LosT",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 25,
                            Artist = "Linken Park",
                            CategoryId = 5,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01LostTN.jpg",
                            SongImageUrl = "/images/01Lost.jpg",
                            SongName = "Lost",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 26,
                            Artist = "Mitski",
                            CategoryId = 6,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01My-Love-Mine-All-MineTN.jpg",
                            SongImageUrl = "/images/01My-Love-Mine-All-Mine.jpg",
                            SongName = "My Love Mine All Mine",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 27,
                            Artist = "Big Thief",
                            CategoryId = 6,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Vampire-EmpireTN.jpg",
                            SongImageUrl = "/images/01Vampire-Empire.jpg",
                            SongName = "Vampire Empire",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 28,
                            Artist = "boygenius",
                            CategoryId = 6,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01True-BlueTN.jpg",
                            SongImageUrl = "/images/01True-Blue.jpg",
                            SongName = "True Blue",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 29,
                            Artist = "Lana Del Ray",
                            CategoryId = 6,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01A&WTN.jpg",
                            SongImageUrl = "/images/01A&W.jpg",
                            SongName = "A&W",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 30,
                            Artist = "Sufjan Stevens",
                            CategoryId = 6,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Will-Anybody-Ever-Love-MeTN.jpg",
                            SongImageUrl = "/images/01Will-Anybody-Ever-Love-Me.jpg",
                            SongName = "Will Anybody Ever Love Me",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 31,
                            Artist = "JayO",
                            CategoryId = 7,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/0122TN.jpg",
                            SongImageUrl = "/images/0122.jpg",
                            SongName = "22",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 32,
                            Artist = "Julian Dysart",
                            CategoryId = 7,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Man-DownTN.jpg",
                            SongImageUrl = "/images/01Man-Down.jpg",
                            SongName = "Man Down",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 33,
                            Artist = "MiLES.",
                            CategoryId = 7,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01AdvantageTN.jpg",
                            SongImageUrl = "/images/01Advantage.jpg",
                            SongName = "Advantage",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 34,
                            Artist = "Kyle Lux",
                            CategoryId = 7,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Like-MeTN.jpg",
                            SongImageUrl = "/images/01Like-Me.jpg",
                            SongName = "Like Me",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 35,
                            Artist = "Lekan",
                            CategoryId = 7,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01FamiliarTN.jpg",
                            SongImageUrl = "/images/01Familiar.jpg",
                            SongName = "Familiar",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 36,
                            Artist = "Cisco Swank",
                            CategoryId = 8,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Soon-We'll-Make-ItTN.jpg",
                            SongImageUrl = "/images/01Soon-We'll-Make-It.jpg",
                            SongName = "Soon We'll Make It",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 37,
                            Artist = "Sean Mason",
                            CategoryId = 8,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01ClosureTN.jpg",
                            SongImageUrl = "/images/01Closure.jpg",
                            SongName = "Closure",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 38,
                            Artist = "aja monet",
                            CategoryId = 8,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01why-my-loveTN.jpg",
                            SongImageUrl = "/images/01why-my-love.jpg",
                            SongName = "why my love?",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 39,
                            Artist = "Mohini Dey",
                            CategoryId = 8,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Introverted SoulTN.jpg",
                            SongImageUrl = "/images/01Introverted-Soul.jpg",
                            SongName = "Introverted Soul",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 40,
                            Artist = "Sam Greenfield",
                            CategoryId = 8,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01CheeksTN.jpg",
                            SongImageUrl = "/images/01Cheeks.jpg",
                            SongName = "Cheeks",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 41,
                            Artist = "Brian Eno",
                            CategoryId = 9,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01An-EndingTN.jpg",
                            SongImageUrl = "/images/01An-Ending.jpg",
                            SongName = "An Ending",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 42,
                            Artist = "Aphex Twin",
                            CategoryId = 9,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/013TN.jpg",
                            SongImageUrl = "/images/013.jpg",
                            SongName = "#3",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 43,
                            Artist = "Stars Of The Lid",
                            CategoryId = 9,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01The-Mouthchew-Pt-2TN.jpg",
                            SongImageUrl = "/images/01The-Mouthchew-Pt-2.jpg",
                            SongName = "The Mouthchew Pt 2",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 44,
                            Artist = "Tim Hecker",
                            CategoryId = 9,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01Boreal-Kiss-Pt-1TN.jpg",
                            SongImageUrl = "/images/01Boreal-Kiss-Pt-1.jpg",
                            SongName = "Boreal Kiss Pt 1",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 45,
                            Artist = "Hildur Guonadottir",
                            CategoryId = 9,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/0112-Hours-BeforeTN.jpg",
                            SongImageUrl = "/images/0112-Hours-Before.jpg",
                            SongName = "12 Hours Before",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 46,
                            Artist = "Alikiba",
                            CategoryId = 10,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01MahabaTN.jpg",
                            SongImageUrl = "/images/01Mahaba.jpg",
                            SongName = "Mahaba",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 47,
                            Artist = "Big Bang Bishanya",
                            CategoryId = 10,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01OtsmaTN.jpg",
                            SongImageUrl = "/images/01Otsma.jpg",
                            SongName = "Otsma",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 48,
                            Artist = "Dexta Deps",
                            CategoryId = 10,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01TwinkleTN.jpg",
                            SongImageUrl = "/images/01Twinkle.jpg",
                            SongName = "Twinkle",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 49,
                            Artist = "Shufflers",
                            CategoryId = 10,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01MalaniTN.jpg",
                            SongImageUrl = "/images/01Malani.jpg",
                            SongName = "Malani",
                            SongPrice = 0.99m
                        },
                        new
                        {
                            SongId = 50,
                            Artist = "Vybz Kartel",
                            CategoryId = 10,
                            IsSongInStock = true,
                            IsSongOnSale = false,
                            SongImageThumbnailUrl = "/images/thumbnails/01DedicationTN.jpg",
                            SongImageUrl = "/images/01Dedication.jpg",
                            SongName = "Dedication",
                            SongPrice = 0.99m
                        });
                });

            modelBuilder.Entity("SongStore.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SongStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SongStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SongStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SongStore.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SongStore.Models.OrderDetail", b =>
                {
                    b.HasOne("SongStore.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SongStore.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SongStore.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("SongStore.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SongStore.Models.Song", b =>
                {
                    b.HasOne("SongStore.Models.Category", "Category")
                        .WithMany("Balls")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SongStore.Models.Category", b =>
                {
                    b.Navigation("Balls");
                });

            modelBuilder.Entity("SongStore.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
